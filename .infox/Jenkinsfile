#!/usr/bin/env groovy
def buildParams = [:]

void nexusPublish(String repository, String version, String uploadVersion) {
    def protocol = ("${env.NEXUS_BASE_URL}" =~ /^(?:(https?):\/\/)?(.*)$/)[0][1] ?: 'http'
    def urlWithoutProtocol = ("${env.NEXUS_BASE_URL}" =~ /^(?:(https?):\/\/)?(.*)$/)[0][2]
    nexusArtifactUploader credentialsId: 'nexus-credentials', groupId: 'br.com.loglabdigital',
        nexusUrl: urlWithoutProtocol, nexusVersion: 'nexus3', protocol: protocol,
        repository: repository, version: uploadVersion,
        artifacts: [
            [artifactId: 'epp', file: "epp/jsf-gui/target//epp-${version}.war", type: 'war'],
            [artifactId: 'liquibase-epp', file:"epp/liquibase/target/liquibase-epp-${version}.tar.gz", type:'tar.gz']
        ]
}

pipeline {
    agent none

    triggers {
        cron('0 12 * * *')
    }

    environment {
        projectName = 'ePP'
    }
    options {
        buildDiscarder logRotator(artifactNumToKeepStr: '2')
    }
    stages {

        stage('Compilação, testes unitários, package e deploy para o nexus') {
            agent any
            tools {
                maven 'Maven'
            }
            steps {
                script {
                    def epochSeconds=sh(script:'git log -n 1 --format=\'%ct\'', returnStdout: true)
                    buildParams['maven'] = readMavenModel('epp/bom/pom.xml')
                    buildParams['baseVersion'] = (buildParams.maven.version ?: buildParams.maven.parent.version)
                    def currentVersion = (buildParams.baseVersion =~ /\d+\.\d+\.\d+/)[0]
                    buildParams['version'] = "${currentVersion}-a$epochSeconds".trim()
                }
                sh "mvn -s settings.xml -Pbuild:all -Dgit-commit-id-plugin.useGitNative=true -Dmaven.test.failure.ignore -Dsurefire.useFile=false --batch-mode -V -U -e dependency:purge-local-repository clean verify"
                sh "mvn -s settings.xml -Pbuild:all --batch-mode -V -U -e checkstyle:checkstyle pmd:pmd pmd:cpd"
            }
            post {
                success {
                    junit allowEmptyResults: true, testResults: '**/target/surefire-reports/TEST-*.xml'

                    recordIssues enabledForFailure: true, tools: [mavenConsole(), java(), javaDoc()]
                    recordIssues enabledForFailure: true, tool: checkStyle()
                    recordIssues enabledForFailure: true, tool: cpd(pattern: '**/target/cpd.xml')
                    recordIssues enabledForFailure: true, tool: pmdParser(pattern: '**/target/pmd.xml')
                    script {
                        nexusPublish('infox-maven-stagingarea', buildParams.baseVersion, buildParams.version)
                    }
                }
                always {
                    deleteDir()
                }
            }
        }

    }

}

