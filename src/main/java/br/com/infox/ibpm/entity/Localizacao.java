/*
 IBPM - Ferramenta de produtividade Java
 Copyright (c) 1986-2009 Infox Tecnologia da Informação Ltda.

 Este programa é software livre; você pode redistribuí-lo e/ou modificá-lo 
 sob os termos da GNU GENERAL PUBLIC LICENSE (GPL) conforme publicada pela 
 Free Software Foundation; versão 2 da Licença.
 Este programa é distribuído na expectativa de que seja útil, porém, SEM 
 NENHUMA GARANTIA; nem mesmo a garantia implícita de COMERCIABILIDADE OU 
 ADEQUAÇÃO A UMA FINALIDADE ESPECÍFICA.
 
 Consulte a GNU GPL para mais detalhes.
 Você deve ter recebido uma cópia da GNU GPL junto com este programa; se não, 
 veja em http://www.gnu.org/licenses/   
*/
package br.com.infox.ibpm.entity;
// Generated 30/10/2008 07:40:27 by Hibernate Tools 3.2.0.CR1

import java.util.ArrayList;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OrderBy;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import br.com.infox.annotations.ChildList;
import br.com.infox.annotations.HierarchicalPath;
import br.com.infox.annotations.Parent;
import br.com.infox.annotations.PathDescriptor;
import br.com.infox.annotations.Recursive;
import br.com.infox.epp.documento.entity.ItemTipoDocumento;
import br.com.infox.epp.entity.LocalizacaoTurno;
import br.com.infox.util.constants.LengthConstants;


/**
 * Localizacao generated by hbm2java
 */ 

@Entity
@Table(name = Localizacao.TABLE_NAME, schema="public")
@Recursive
public class Localizacao implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	public static final String TABLE_NAME = "tb_localizacao";

	private int idLocalizacao;
	private Endereco endereco;
	private String localizacao;
	private Boolean ativo;
	private Localizacao localizacaoPai;
	private Localizacao estruturaFilho;
	private Boolean estrutura;
	
	private List<LocalizacaoTurno> localizacaoTurnoList = new ArrayList<LocalizacaoTurno>(0);
	private List<ItemTipoDocumento> itemTipoDocumentoList = new ArrayList<ItemTipoDocumento>(0);
	private List<UsuarioLocalizacao> usuarioLocalizacaoList = new ArrayList<UsuarioLocalizacao>(0);
	private List<Localizacao> localizacaoList = new ArrayList<Localizacao>(0);
	
	private String caminhoCompleto;
	private Boolean temContaTwitter=false;

	public Localizacao() {
	}

	@SequenceGenerator(name = "generator", sequenceName = "public.sq_tb_localizacao")
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "id_localizacao", unique = true, nullable = false)
	public int getIdLocalizacao() {
		return this.idLocalizacao;
	}

	public void setIdLocalizacao(int idLocalizacao) {
		this.idLocalizacao = idLocalizacao;
	}
	
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "id_endereco")
	public Endereco getEndereco() {
		return this.endereco;
	}

	public void setEndereco(Endereco endereco) {
		this.endereco = endereco;
	}
	
	@Column(name = "ds_localizacao", nullable = false, length=LengthConstants.DESCRICAO_PADRAO, unique = true)
	@Size(max=LengthConstants.NOME_PADRAO)
	@NotNull
	@PathDescriptor
	public String getLocalizacao() {
		return this.localizacao;
	}

	public void setLocalizacao(String localizacao) {
		this.localizacao = localizacao;
	}
	
	@Column(name = "in_ativo", nullable = false)
	@NotNull
	public Boolean getAtivo() {
		return this.ativo;
	}

	public void setAtivo(Boolean ativo) {
		this.ativo = ativo;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_localizacao_pai")
	@Parent
	public Localizacao getLocalizacaoPai() {
		return this.localizacaoPai;
	}

	public void setLocalizacaoPai(Localizacao localizacaoPai) {
		this.localizacaoPai = localizacaoPai;
	}
	
	@OneToMany(cascade = {CascadeType.PERSIST, CascadeType.MERGE,
			CascadeType.REFRESH}, fetch = FetchType.LAZY, mappedBy = "localizacao")
	public List<ItemTipoDocumento> getItemTipoDocumentoList() {
		return this.itemTipoDocumentoList;
	}

	public void setItemTipoDocumentoList(
			List<ItemTipoDocumento> itemTipoDocumentoList) {
		this.itemTipoDocumentoList = itemTipoDocumentoList;
	}

	@OneToMany(cascade = {CascadeType.PERSIST, CascadeType.MERGE,
			CascadeType.REFRESH}, fetch = FetchType.LAZY, mappedBy = "localizacao")
	public List<UsuarioLocalizacao> getUsuarioLocalizacaoList() {
		return this.usuarioLocalizacaoList;
	}

	public void setUsuarioLocalizacaoList(
			List<UsuarioLocalizacao> usuarioLocalizacaoList) {
		this.usuarioLocalizacaoList = usuarioLocalizacaoList;
	}
	
	@OneToMany(cascade = {CascadeType.PERSIST, CascadeType.MERGE,
			CascadeType.REFRESH}, fetch = FetchType.LAZY, mappedBy = "localizacaoPai")
	@OrderBy("localizacao")
	@ChildList
	public List<Localizacao> getLocalizacaoList() {
		return this.localizacaoList;
	}

	public void setLocalizacaoList(List<Localizacao> localizacaoList) {
		this.localizacaoList = localizacaoList;
	}
	
	@Column(name = "in_estrutura", nullable = false)
	@NotNull
		
	public Boolean getEstrutura() {
		return estrutura;
	}
	
	public void setEstrutura(Boolean estrutura) {
		this.estrutura = estrutura;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_estrutura")	
	public Localizacao getEstruturaFilho() {
		return estruturaFilho;
	}
	
	public void setEstruturaFilho(Localizacao estruturaFilho) {
		this.estruturaFilho = estruturaFilho;
	}
	
	@Column(name="in_twitter", nullable=false)
	public Boolean getTemContaTwitter() {
		return temContaTwitter;
	}

	public void setTemContaTwitter(Boolean temContaTwitter) {
		this.temContaTwitter = temContaTwitter;
	}

	@Column(name="ds_caminho_completo", unique=true)
	@HierarchicalPath
	public String getCaminhoCompleto() {
		return caminhoCompleto;
	}
	
	public void setCaminhoCompleto(String caminhoCompleto) {
		this.caminhoCompleto = caminhoCompleto;
	}
	
	@Override
	public String toString() {
		return localizacao;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof Localizacao)) {
			return false;
		}
		Localizacao other = (Localizacao) obj;
		if (getIdLocalizacao() != other.getIdLocalizacao()) {
			return false;
		}
		return true;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + getIdLocalizacao();
		return result;
	}

	public void setLocalizacaoTurnoList(List<LocalizacaoTurno> localizacaoTurnoList) {
		this.localizacaoTurnoList = localizacaoTurnoList;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "localizacao")
	public List<LocalizacaoTurno> getLocalizacaoTurnoList() {
		return localizacaoTurnoList;
	}
}