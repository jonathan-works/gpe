/*
 IBPM - Ferramenta de produtividade Java
 Copyright (c) 1986-2009 Infox Tecnologia da Informação Ltda.

 Este programa é software livre; você pode redistribuí-lo e/ou modificá-lo 
 sob os termos da GNU GENERAL PUBLIC LICENSE (GPL) conforme publicada pela 
 Free Software Foundation; versão 2 da Licença.
 Este programa é distribuído na expectativa de que seja útil, porém, SEM 
 NENHUMA GARANTIA; nem mesmo a garantia implícita de COMERCIABILIDADE OU 
 ADEQUAÇÃO A UMA FINALIDADE ESPECÍFICA.
 
 Consulte a GNU GPL para mais detalhes.
 Você deve ter recebido uma cópia da GNU GPL junto com este programa; se não, 
 veja em http://www.gnu.org/licenses/   
*/
package br.com.infox.ibpm.entity;
// Generated 30/10/2008 07:40:27 by Hibernate Tools 3.2.0.CR1

import java.util.ArrayList;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;

import javax.validation.constraints.Size;
import javax.validation.constraints.NotNull;

import br.com.itx.util.HibernateUtil;

/**
 * TipoModeloDocumento generated by hbm2java
 */
@Entity
@Table(name = "tb_tipo_modelo_documento", schema="public", uniqueConstraints={
		@UniqueConstraint(columnNames={"ds_tipo_modelo_documento"}), 
		@UniqueConstraint(columnNames={"ds_abreviacao"})
})
public class TipoModeloDocumento implements java.io.Serializable {

	private static final long serialVersionUID = 1L;

	private int idTipoModeloDocumento;
	private GrupoModeloDocumento grupoModeloDocumento;
	private String tipoModeloDocumento;
	private String abreviacao;
	private Boolean ativo;
	private TipoModeloDocumento tipoModeloDocumentoCombo;
	
//	private List<Variavel> variavelList = new ArrayList<Variavel>(0);
	private List<ModeloDocumento> modeloDocumentoList = new ArrayList<ModeloDocumento>(0);
	
	private List<VariavelTipoModelo> variavelTipoModeloList = new ArrayList<VariavelTipoModelo>(0);


	public TipoModeloDocumento() {
	}

	@SequenceGenerator(name = "generator", sequenceName = "public.sq_tb_tipo_modelo_documento")
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "id_tipo_modelo_documento", unique = true, nullable = false)
	public int getIdTipoModeloDocumento() {
		return this.idTipoModeloDocumento;
	}

	public void setIdTipoModeloDocumento(int idTipoModeloDocumento) {
		this.idTipoModeloDocumento = idTipoModeloDocumento;
	}
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_grupo_modelo_documento", nullable = false)
	@NotNull
	public GrupoModeloDocumento getGrupoModeloDocumento() {
		return this.grupoModeloDocumento;
	}

	public void setGrupoModeloDocumento(
			GrupoModeloDocumento grupoModeloDocumento) {
		this.grupoModeloDocumento = grupoModeloDocumento;
	}

	@Column(name = "ds_tipo_modelo_documento", nullable = false, length = 50)
	@NotNull
	@Size(max = 50)
	public String getTipoModeloDocumento() {
		return this.tipoModeloDocumento;
	}

	public void setTipoModeloDocumento(String tipoModeloDocumento) {
		this.tipoModeloDocumento = tipoModeloDocumento;
	}

	@Column(name = "ds_abreviacao", nullable = false, length = 5, unique=true)
	@NotNull
	@Size(max = 50)
	public String getAbreviacao() {
		return this.abreviacao;
	}

	public void setAbreviacao(String abreviacao) {
		this.abreviacao = abreviacao;
	}
	
	@OneToMany(cascade = {CascadeType.PERSIST, CascadeType.MERGE,
			CascadeType.REFRESH}, fetch = FetchType.LAZY, mappedBy = "tipoModeloDocumento")
	public List<ModeloDocumento> getModeloDocumentoList() {
		return this.modeloDocumentoList;
	}

	public void setModeloDocumentoList(List<ModeloDocumento> modeloDocumentoList) {
		this.modeloDocumentoList = modeloDocumentoList;
	}
	
	@OneToMany(cascade = {CascadeType.PERSIST, CascadeType.MERGE,
			CascadeType.REFRESH}, fetch = FetchType.LAZY, mappedBy = "tipoModeloDocumento")
	public List<VariavelTipoModelo> getVariavelTipoModeloList() {
		return variavelTipoModeloList;
	}

	public void setVariavelTipoModeloList(List<VariavelTipoModelo> variavelTipoModeloList) {
		this.variavelTipoModeloList = variavelTipoModeloList;
	}
	
//	@ManyToMany(cascade = {CascadeType.PERSIST, CascadeType.MERGE,
//			CascadeType.REFRESH}, fetch = FetchType.LAZY)
//	@JoinTable(name = "tb_variavel_tipo_modelo", schema = "public", joinColumns = {@JoinColumn(name = "id_tipo_modelo_documento", nullable = false, updatable = false)}, inverseJoinColumns = {@JoinColumn(name = "id_variavel", nullable = false, updatable = false)})
//	public List<Variavel> getVariavelList() {
//		return this.variavelList;
//	}
//
//	public void setVariavelList(List<Variavel> variavelList) {
//		this.variavelList = variavelList;
//	}

	@Column(name = "in_ativo", nullable = false)
	@NotNull
	public Boolean getAtivo() {
		return ativo;
	}

	public void setAtivo(Boolean ativo) {
		this.ativo = ativo;
	}
	
	@Transient
	public TipoModeloDocumento getTipoModeloDocumentoCombo(){
		return tipoModeloDocumentoCombo;
	}
	
	public void setTipoModeloDocumentoCombo(TipoModeloDocumento tipoModeloDocumentoCombo){
		this.tipoModeloDocumentoCombo = tipoModeloDocumentoCombo;
	}
	
	@Override
	public String toString() {
		return tipoModeloDocumento;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof TipoModeloDocumento)) {
			return false;
		}
		TipoModeloDocumento other = (TipoModeloDocumento) HibernateUtil.removeProxy(obj);
		if (getIdTipoModeloDocumento() != other.getIdTipoModeloDocumento()) {
			return false;
		}
		return true;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + getIdTipoModeloDocumento();
		return result;
	}
}