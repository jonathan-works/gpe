<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE composition PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" 
                      "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets">

<script language="javascript" charset="ISO-8859-1">
//<![CDATA[
var booleanVariableList=new Array();
var numberVariableList=new Array();
var transitionList=new Array();
var input;
var expressionDiv;
var clear = false;
var imageSrc = "";

function initVariableList() {
	booleanVariableList.clear();
	numberVariableList.clear();
	transitionList.clear();
	booleanVariableList = #{processBuilder.currentNode.getBooleanVariables()};
	numberVariableList = #{processBuilder.currentNode.getNumberVariables()};
	transitionList = #{processBuilder.currentNode.getLeavingTransitionList()};
}

function getNumber() {
	var valor = ".";
	message = "#{messages['expressionWizard.numberPrompt']}";
	while (true) {
		valor = window.prompt(message, "0");
		valor = valor.replace(".", "");
		valor = valor.replace(",", ".");
		valor = parseFloat(valor);
		if ((!isNaN(valor)) && (isFinite(valor))) {
			break;
		}
		message = "#{messages['expressionWizard.numberPromptError']}";
	}
	return valor;
}

function reset(element) {
	element.style.backgroundColor="";
	element.style.cursor="";
	if (element.classList.contains("booleanSelect")) {
		element.innerHTML = "";
		element.appendChild( booleanSelect() );
	} else if (element.classList.contains("aritOperSelect")) {
		element.innerHTML = "";
		element.appendChild( aritOperSelect() );
	} else if (element.classList.contains("conclusionSelect")) {
		element.innerHTML = "";
		element.appendChild( conclusionSelect() );
	} else if (element.classList.contains("expressionDiv")) {
		expressionDiv.innerHTML = "";
		expressionDiv.appendChild( addImageWiz() );
		clear = false;
	}
}

function onMouseOverSpan(event) {
	var parent = event.currentTarget.parentNode;
	parent.style.backgroundColor="#cecece";
	parent.style.cursor="pointer";
}

function onMouseExitSpan(event) {
	var parent = event.currentTarget.parentNode;
	parent.style.backgroundColor="";
	parent.style.cursor="";
}

function onMouseClickSpan(event) {
	reset(event.currentTarget.parentNode);
}

function spanLink(label, display) {
	var element = document.createElement("span");
	element.innerHTML = label;
	if (display) {
		element.style.display = display;
	}
	element.onmouseover = onMouseOverSpan;
	element.onmouseout = onMouseExitSpan;
	element.onclick = onMouseClickSpan;

	return element;
}

function setTextArea(text) {
	input.innerHTML="#"+"{"+text+"}";
}

function onSelectExpWiz(event) {
	var sValue = event.currentTarget.value;
	var pNode = event.currentTarget.parentNode;
	if (sValue != "") {
		pNode.innerHTML = "";
	}
	if (sValue == "or") {
		pNode.appendChild( spanLink("( "));
		pNode.appendChild( booleanSelect() );
		pNode.appendChild( spanLink(" || "));
		pNode.appendChild( booleanSelect() );
		pNode.appendChild( spanLink(" )"));
	} else if (sValue == "and") {
		pNode.appendChild( spanLink("( "));
		pNode.appendChild( booleanSelect() );
		pNode.appendChild( spanLink(" && "));
		pNode.appendChild( booleanSelect() );
		pNode.appendChild( spanLink(" )"));
	} else if (sValue == "not") {
		pNode.appendChild( spanLink("!") );
		pNode.appendChild( booleanSelect() );
	} else if (sValue == "operacao") {
		pNode.appendChild( aritOperSelect() );
	} else if (sValue == "num") {
		pNode.appendChild( spanLink( getNumber() ) );
	} else if (sValue == "if") {
		pNode.appendChild( spanLink("( ") );
		expression(pNode);
		pNode.appendChild( spanLink(" )") );
	} else if ((sValue == "==") || (sValue == "!=")
			|| (sValue == ">=") || (sValue == ">")
			|| (sValue == "<=") || (sValue == "<")
			|| (sValue == "+") || (sValue == "-")
			|| (sValue == "/") || (sValue == "*")) {
		pNode.appendChild( spanLink("( ") );
		pNode.appendChild( aritOperSelect() );
		pNode.appendChild( spanLink(" " + sValue + " ") );
		pNode.appendChild( aritOperSelect() );
		pNode.appendChild( spanLink(" )") );
	} else {
		pNode.appendChild( spanLink(sValue) );
	}
	
	if (expressionDiv.getElementsByTagName("select").length == 0) {
		setTextArea(expressionDiv.textContent);
	}
	
}

function addOption(value, label, parentNode) {
	result = document.createElement("option")
	result.value = value;
	result.innerHTML = label;
	return parentNode.appendChild(result);
}

function addListToSelectElement(list, element) {
	for(var i=0; i < list.length; i++) {
		if (i==0) {
			addOption("", "", element);
		}
		item = list[i];
		addOption(item, item, element);
	}
}

function aritOperSelect() {
	var parent = document.createElement("div");
	parent.classList.add("aritOperSelect");
	var element = parent.appendChild(document.createElement("select"));
	element.onchange = onSelectExpWiz;
	
	addOption("", "#{messages['expressionWizard.aritSelect.null']}", element);
	addOption("+", "#{messages['expressionWizard.aritSelect.plus']}", element);
	addOption("-", "#{messages['expressionWizard.aritSelect.minus']}", element);
	addOption("*", "#{messages['expressionWizard.aritSelect.mult']}", element);
	addOption("/", "#{messages['expressionWizard.aritSelect.div']}", element);
	addOption("","",element);
	addOption("num", "#{messages['expressionWizard.aritSelect.numb']}", element);
	addListToSelectElement( numberVariableList, element);
	
	return parent;
}

function booleanSelect() {
	var parent = document.createElement("div");
	console.trace("1");
	parent.classList.add("booleanSelect");
	var element = parent.appendChild(document.createElement("select"));
	element.onchange = onSelectExpWiz;
	
	addOption("", "#{messages['expressionWizard.booleanSelect.null']}", element);
	addOption("true", "#{messages['expressionWizard.booleanSelect.true']}", element);
	addOption("false", "#{messages['expressionWizard.booleanSelect.false']}", element);
	addOption("or", "#{messages['expressionWizard.booleanSelect.or']}", element);
	addOption("and", "#{messages['expressionWizard.booleanSelect.and']}", element);
	addOption("not", "#{messages['expressionWizard.booleanSelect.not']}", element);
	addOption("", "", element);
	addOption("==", "#{messages['expressionWizard.booleanSelect.equals']}", element);
	addOption("!=", "#{messages['expressionWizard.booleanSelect.notEqual']}", element);
	addOption(">=", "#{messages['expressionWizard.booleanSelect.gte']}", element);
	addOption(">", "#{messages['expressionWizard.booleanSelect.gt']}", element);
	addOption("<=", "#{messages['expressionWizard.booleanSelect.lte']}", element);
	addOption("<", "#{messages['expressionWizard.booleanSelect.lt']}", element);
	addListToSelectElement( booleanVariableList, element);

	return parent;
}

function conclusionSelect() {
	var parent = document.createElement("div");
	parent.classList.add("conclusionSelect");
	var element = parent.appendChild(document.createElement("select"));
	element.onchange = onSelectExpWiz;
	addOption("", "#{messages['expressionWizard.condSelect.null']}", element);
	addOption("if", "#{messages['expressionWizard.condSelect.cond']}", element);
	addListToSelectElement( transitionList, element);

	return parent;
}

function expression(parent) {
	parent.appendChild( booleanSelect() );
	parent.appendChild( spanLink(" ? ") );
	parent.appendChild( conclusionSelect() );
	parent.appendChild( spanLink(" : ") );
	parent.appendChild( conclusionSelect() );
	return parent;
}

function initialExpression(parent) {
	initVariableList();
	return expression(parent);
}

function _initWizard() {
	if (clear) {
		expressionDiv.innerHTML = imageSrc;
		clear = false;
	} else {
		expressionDiv.innerHTML = "";
		initialExpression( expressionDiv );
		clear = true;
	}
}

function addImageWiz(src) {
	var image = document.createElement("img");
	image.src = imageSrc;
	image.onclick = _initWizard;
	image.style.cursor = "pointer";
	image.title = "Wizard de Expressões";
	return image;
}

function initExpressions(expressionId, inputId, wizardImageSrc) {
	expressionDiv = document.getElementById(expressionId);
	input = document.getElementById(inputId);
	expressionDiv.innerHTML = "";
	imageSrc = wizardImageSrc;
	expressionDiv.appendChild( addImageWiz() );
}

//]]>
</script>
</ui:composition>