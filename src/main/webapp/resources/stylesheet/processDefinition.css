.pointer {
	cursor: pointer;
}

.pd-xml.textarea {
	min-height: 465px;
	resize: none;
}

.rf-dt.dt-destinatarios {
	width: 100%;
}

.conteudo.minimal {
	height: calc(100% - 125px);
}

.swimlane-list,.swimlane-form,.node-instance-e,.node-instance-l {
	display: inline-block;
	vertical-align: top;
}

.node-instance-e {
	width: 70%;
}

.node-instance-l {
	width: 30%;
}

.node-instance-p {
	width: 100%;
	min-width: 800px;
}

.link {
	text-decoration: none;
	color: #000
}

.link:hover {
	text-decoration: underline;
}

.bold-link {
	font-weight: 900;
}

.rf-p-b.panel.processDefinition {
	overflow-x: auto;
}

.graphHint.hidden {
  display:none;
}

.graphHint {
	position: absolute;
	background: rgba(255, 255, 220, 0.75);
	width: 500px;
	z-index: 100;
	border-style: solid;
	border-width: 1px;
	border-color: #9F9F9F;
	-webkit-box-shadow: 7px 7px 5px 0px rgba(50, 50, 50, 0.75);
	box-shadow: 7px 7px 5px 0px rgba(50, 50, 50, 0.75);
	-webkit-border-radius: 5px;
	border-radius: 5px;
}

.graphHint-title {
  width:100%;
  text-align:center;
  font-weight:bold;
<<<<<<< Updated upstream
=======
<<<<<<< Updated upstream
=======
>>>>>>> Stashed changes
}

.Node.Selected{
  cursor:pointer;
}
.Node.Text{
  color:#CCC;
}
.Node.Text.Operator{
  margin:0 5px;
}
.toolbar{
  position:absolute;
  z-index:128;
  top:20px;
  left:0;
  margin:0;
  padding:0 10px 0 0;
}
.toolbar > .toolbar-itm,.toolbar > .toolbar-itm > .toolbar > .toolbar-itm {
  display:block;
  vertical-align:top;
  position:relative;
}

.toolbar > .toolbar-itm > .toolbar {
  display:none;
  position:absolute;
  left:100%;
  top:0;
}
.expressionInput.hidden{
  display:none;
}
.expressionDiv{
  font-size:12px;
}
.Text.Operator {
  padding:0 5px;
}

.toolbar > .toolbar-itm:hover > .toolbar {
  display:block;
}

.toolbar-itm.Action:hover {
  color:#FFF;
  background-color:#505050;
  cursor:context-menu;
}
.toolbar,.toolbar > .toolbar-itm > .toolbar {
  padding:5px;
}
.toolbar {
  background-color:#C0C0C0;
  color:#000;
}
.Node > .Value:hover, .Node > .Operator:hover,.Selected {
  background-color:#C0C0C0;
}

.TransitionNode, .TransitionNode>.Text,.StringNode, .StringNode>.Text{
<<<<<<< Updated upstream
  color:#00F;
=======
  color:#44F;
>>>>>>> Stashed changes
}
.BooleanNode, .BooleanNode>.Text {
  color:#A00;
}
.ArithNode, .ArithNode>.Text {
  color:#040;
}

.ArithNode > .Text.Operator {
  color:#030;
}
.StringNode > .Text.Operator,.TransitionNode > .Text.Operator {
  color:#00E;
  margin:0;
  padding:0;
}
.BooleanNode > .Text.Operator {
  color:#900;
}

.expressionDiv > .Node {
  margin:0;
}

<<<<<<< Updated upstream
.Expression.Node {
  display:inline-block;
}

.Node > .Expression.Node {
  margin:0 0 0 20px;
}

.Expression.Node > .ArithNode, .Expression.Node > .StringNode, .Expression.Node > .TransitionNode, .Expression.Node > .BooleanNode {
=======
.Node > .Expression.Node, .Expression.Node > .ArithNode, .Expression.Node > .StringNode, .Expression.Node > .TransitionNode, .Expression.Node > .BooleanNode {
>>>>>>> Stashed changes
  margin:0 0 0 20px;
}

.Node {
  vertical-align:middle;
}

<<<<<<< Updated upstream
.BooleanNode, .StringNode, .ArithNode, .TransitionNode {
  display:inline-block;
=======
.Expression.Node,.BooleanNode, .StringNode, .ArithNode, .TransitionNode {
  display:inline-block;
>>>>>>> Stashed changes
>>>>>>> Stashed changes
}