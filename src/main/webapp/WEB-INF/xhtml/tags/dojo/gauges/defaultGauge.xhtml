<?xml version="1.0" encoding="ISO-8859-1"?>

<!--
  IBPM - Ferramenta de produtividade Java
  Copyright (c) 1986-2009 Infox Tecnologia da Informação Ltda.
 
  Este programa é software livre; você pode redistribuí-lo e/ou modificá-lo 
  sob os termos da GNU GENERAL PUBLIC LICENSE (GPL) conforme publicada pela 
  Free Software Foundation; versão 2 da Licença.
  Este programa é distribuído na expectativa de que seja útil, porém, SEM 
  NENHUMA GARANTIA; nem mesmo a garantia implícita de COMERCIABILIDADE OU 
  ADEQUAÇÃO A UMA FINALIDADE ESPECÍFICA.
  
  Consulte a GNU GPL para mais detalhes.
  Você deve ter recebido uma cópia da GNU GPL junto com este programa; se não, 
  veja em http://www.gnu.org/licenses/  
-->

<ui:composition xmlns="http://www.w3.org/1999/xhtml"
    xmlns:ui="http://java.sun.com/jsf/facelets"
    xmlns:s="http://jboss.com/products/seam/taglib">
    <script>
    	dojoConfig={
    	        async:false
    	}
    </script>
    <script src="//ajax.googleapis.com/ajax/libs/dojo/1.8.3/dojo/dojo.js"></script>
    
    <ui:param name="id" value="#{wi:get(id, 'default')}" />
    <ui:param name="angle" value="#{wi:get(angle,300)}" />
    <ui:param name="radius" value="#{wi:get(radius,150)}" />
    <ui:param name="min" value="#{wi:get(min,0)}" />
    <ui:param name="max" value="#{wi:get(max,100)}" />
    <ui:param name="value" value="#{wi:get(value,0)}" />
    <ui:param name="showValues" value="#{wi:get(showValues,'false')}" />
    <ui:param name="tickInterval" value="#{wi:get(tickInterval, 1)}" />
    <ui:param name="width" value="#{wi:get(width, radius*4)}" />
    <ui:param name="height" value="#{wi:get(height, radius*4)}" />
    
    <script>
  //<![CDATA[
        (function() {
            dojo.require("dojox.gauges.AnalogGauge");
            dojo.require("dojox.gauges.AnalogArcIndicator");
            dojo.require("dojox.gauges.AnalogNeedleIndicator");
        })();
        
        dojo.ready(function() {
            var idGauge = "#{id}Gauge";
            var gauge = dojo.byId(idGauge);
            var _angle = #{angle};
            var _value = #{value};
            var _radius = #{radius};
            var _width = #{width};
            var _height = #{height};
            var _min = #{min};
            var _max = #{max};
            var _rangeColors = [{offset:0, color:'#AAA'},
                                {offset:1, color:'#444'}];
            
            var _ranges = [{
                id : "#{id}GaugeRange1",
                low : _min,
                high : _max,
                hover : _min+"-"+_max,
                color : {
                    type : "radial",
                    cx : _width/2,
                    cy : _height/2,
                    r : _radius,
                    colors : _rangeColors
                }
            }];
            
            var baseIndicatorProps = {
                width:_radius*0.2,
                offset:_radius,
                noChange:true
            }
            
            baseIndicatorProps.value = _max;
            baseIndicatorProps.color = "#CC0000";
            var redIndicator = new dojox.gauges.AnalogArcIndicator(baseIndicatorProps);
            
            baseIndicatorProps.value = _max*0.75;
            baseIndicatorProps.color = "#CCCC00";
            var yellowIndicator = new dojox.gauges.AnalogArcIndicator(baseIndicatorProps);
            
            baseIndicatorProps.value = _max*0.25;
            baseIndicatorProps.color = "#00CC00";
            var greenIndicator = new dojox.gauges.AnalogArcIndicator(baseIndicatorProps);
            
            var _indicators = [
				redIndicator,
				yellowIndicator,
				greenIndicator,
                new dojox.gauges.AnalogNeedleIndicator({
                    id : dijit.getUniqueId('#{id}Needle'),
                    value : _value,
                    width : Math.max(2,_radius/10),
                    length : _radius*1.2,
                    color : '#000000',
                    title : 'Needle',
                    hover : 'Needle: '+_value,
                    noChange : true
                })
			]
            
            var props = {
            	id: dijit.getUniqueId(idGauge),
            	width: _width,
            	height: _height,
            	cx: _width/2,
            	cy: _height/2,
            	radius: _radius,
            	startAngle : -_angle/2,
            	endAngle : _angle/2,
            	hideValues : true,
            	ranges : _ranges,
            	indicators: _indicators,
            	useTooltip: true,
            	background:'rgba(0,0,0,0)'
            }
            
            var _showValues = #{showValues};
            
            if (_showValues) {
            	props.majorTicks = {
                    length : _radius*0.1,
                    offset : _radius*1.15,
                    interval : _max/4,
                    color : 'gray'
                };
            }
            
            gauge = new dojox.gauges.AnalogGauge(props, gauge);
            gauge.startup();
        });
	//]]>
    </script>
    <div id="#{id}GaugeContainer" class="gaugeContainer" style="#{style}">
        <div id="#{id}Gauge" class="gauge">
        </div>
    </div>

</ui:composition>