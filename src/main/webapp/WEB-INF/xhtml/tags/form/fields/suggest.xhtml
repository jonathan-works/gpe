<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
  IBPM - Ferramenta de produtividade Java
  Copyright (c) 1986-2009 Infox Tecnologia da Informação Ltda.
 
  Este programa é software livre; você pode redistribuí-lo e/ou modificá-lo 
  sob os termos da GNU GENERAL PUBLIC LICENSE (GPL) conforme publicada pela 
  Free Software Foundation; versão 2 da Licença.
  Este programa é distribuído na expectativa de que seja útil, porém, SEM 
  NENHUMA GARANTIA; nem mesmo a garantia implícita de COMERCIABILIDADE OU 
  ADEQUAÇÃO A UMA FINALIDADE ESPECÍFICA.
  
  Consulte a GNU GPL para mais detalhes.
  Você deve ter recebido uma cópia da GNU GPL junto com este programa; se não, 
  veja em http://www.gnu.org/licenses/  
--><ui:composition
     xmlns:ui="http://java.sun.com/jsf/facelets"
     xmlns="http://www.w3.org/1999/xhtml"
     xmlns:a="http://richfaces.org/a4j"
     xmlns:c="http://java.sun.com/jsp/jstl/core"
     xmlns:f="http://java.sun.com/jsf/core"
     xmlns:h="http://java.sun.com/jsf/html"
     xmlns:rich="http://richfaces.org/rich"
     xmlns:s="http://jboss.org/schema/seam/taglib"
     xmlns:wi="http://www.itx.com.br/jsf">

	<ui:param
         name="width"
         value="#{empty props.width ? '250' : props.width}" />
	<ui:param
         name="widthBoxSuggest"
         value="#{empty props.widthBoxSuggest ? '250' : props.widthBoxSuggest}" />
	<ui:param
         name="maxlength"
         value="#{empty maxlength ? '50' : maxlength}" />
	<ui:param
         name="template"
         value="#{empty template ? '/WEB-INF/xhtml/components/templates/edit.xhtml' : template}" />
	<ui:param
         name="minChars"
         value="#{empty props.minChars ? (empty minChars ? '1' : minChars) : props.minChars}" />		
	<ui:param
         name="id"
         value="#{empty id ? f.id : id}" />

	<s:decorate
         template="#{template}"
         rendered="#{wi:get(rendered, true)}">

		<ui:define
             name="label">#{label}</ui:define>
		
		<c:if
             test="#{!empty assignTo}">
			#{bean.setExpression(assignTo)}
		</c:if>			

	  	<rich:autocomplete
	  		 id="#{id}"
             minChars="#{minChars}"
             rendered="#{empty props.hideSuggest}"
             var="var"
             fetchValue="#{fetch}"
             autocompleteMethod="#{bean.suggestList}"
             mode="ajax"
             required="#{required}"
             onkeyup="#{onkeyup}"
             disabled="#{disabled}"
             styleClass="suggest"
             
             value="#{bean.defaultValue}"
             onselectitem="__autocompleteSelectItem#{id}()">
			<ui:insert
                 name="columns">
				<h:column>
					<h:outputText
                         value="#{var}" />
				</h:column>
			</ui:insert>

			<ui:insert />
	  	</rich:autocomplete>
	</s:decorate>
	
	<a:jsFunction name="__autocompleteSelectItem#{id}"
		oncomplete="#{oncomplete}"
		status=":status"
		render="#{reRender}"
		execute="@this, #{id}"
		limitRender="#{empty reRender ? false : true}"
		queueId="suggest">
		<f:setPropertyActionListener
			value="#{var}"
			target="#{bean.instance}"/>
	</a:jsFunction>
	
</ui:composition>
