<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- $Id: treePanel.xhtml 794 2010-09-29 12:11:39Z danielsilva $ -->
<!--
  IBPM - Ferramenta de produtividade Java
  Copyright (c) 1986-2009 Infox Tecnologia da Informação Ltda.
 
  Este programa é software livre; você pode redistribuí-lo e/ou modificá-lo 
  sob os termos da GNU GENERAL PUBLIC LICENSE (GPL) conforme publicada pela 
  Free Software Foundation; versão 2 da Licença.
  Este programa é distribuído na expectativa de que seja útil, porém, SEM 
  NENHUMA GARANTIA; nem mesmo a garantia implícita de COMERCIABILIDADE OU 
  ADEQUAÇÃO A UMA FINALIDADE ESPECÍFICA.
  
  Consulte a GNU GPL para mais detalhes.
  Você deve ter recebido uma cópia da GNU GPL junto com este programa; se não, 
  veja em http://www.gnu.org/licenses/  
-->
<ui:composition
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns="http://www.w3.org/1999/xhtml"
	xmlns:a="http://richfaces.org/a4j"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:rich="http://richfaces.org/rich"
	xmlns:s="http://jboss.org/schema/seam/taglib"
	xmlns:wi="http://www.itx.com.br/jsf">

	<ui:param
		name="useCheckBox"
		value="#{empty useCheckBox ? (empty props.useCheckBox ? false : props.useCheckBox) : useCheckBox}" />
	<ui:param
		name="checkBoxRendered"
		value="#{empty checkBoxRendered ? (empty props.checkBoxRendered ? (useCheckBox and !home.managed) : props.checkBoxRendered) : checkBoxRendered}" />
	<ui:param
		name="reRenderDefault"
		value="#{id}HiddenId, #{id}ClearDiv, #{id}Panel" />
	<ui:param
		name="reRender"
		value="#{empty reRender ? reRenderDefault : reRenderDefault.concat((',').concat(reRender)) }" />

	<rich:tree
		id="#{id}Tree"
		toggleType="#{wi:get(switchType, 'ajax')}"
		data="#{item}"
		immediate="true"
		nodeType="#{item.type}"
		render="#{reRender}"
		selectionType="ajax"
		selectionChangeListener="#{tree.processTreeSelectionChange}"
		execute="@this"
		status=":status"
		limitRender="true"
		var="item"
		onselectionchange="#{onselected}"
		oncomplete="#{rich:component(id.concat('Panel'))}.switchToItem('false')">
		
		<rich:treeModelRecursiveAdaptor roots="#{tree.roots}" nodes="#{item.nodes}" />

		<ui:param
			name="isPai"
			value="#{item.entity == home.instance}" />
		<ui:param
			name="ativo"
			value="#{item.entity.ativo}" />
		<ui:param
			name="cantSelect"
			value="#{not item.canSelect()}" />
		<rich:treeNode
			highlightedClass="#{folderSelectable ? '' : 'folderHighlighted'}"
			selectedClass="#{folderSelectable ? '' : 'folderSelected'}"
			type="folder"
			iconExpanded="#{empty icon ? tree.iconFolder : icon}"
			iconLeaf="#{empty iconLeaf ? tree.iconLeaf : iconLeaf}">
			<ui:param
				name="decoration"
				value="#{ativo ? 'none' : 'line-through'}" />
			<ui:param
				name="cor"
				value="#{ativo and not cantSelect  ? '' : 'red'}" />
			<div style="width: 100%; text-decoration:#{decoration}; color: #{cor}">
				<h:selectBooleanCheckbox
					id="#{id}CheckBoxTree"
					value="#{item.selected}"
					rendered="#{checkBoxRendered}">
					<a:ajax
						action="#{tree.setSelectedNode(item)}"
						status=":status"
						event="click"
						execute="@this"
						render="#{id}CheckBoxTree, #{id}Label" />
				</h:selectBooleanCheckbox>
				 
				<h:outputText value="#{item.entity}" />
			</div>
		</rich:treeNode>

		<rich:treeNode
			type="leaf"
			nodeClass=""
			iconCollapsed="#{tree.iconLeaf}"
			iconExpanded="#{tree.iconLeaf}"
			iconLeaf="#{tree.iconLeaf}">
			<ui:param
				name="decoration"
				value="#{item.entity.ativo ? 'none' : 'line-through'}" />
			<ui:param
				name="cor"
				value="#{item.entity.ativo  ? '' : 'red'}" />
			<div style="width: 100%; text-decoration:#{decoration}; color: #{cor}">
				<h:outputText value="#{item.entity}" />
			</div>
		</rich:treeNode>
	</rich:tree>
</ui:composition>
