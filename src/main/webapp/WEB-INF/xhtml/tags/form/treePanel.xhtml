<?xml version="1.0" encoding="ISO-8859-1"?>

<!-- $Id: treePanel.xhtml 794 2010-09-29 12:11:39Z danielsilva $ -->

<!--
  IBPM - Ferramenta de produtividade Java
  Copyright (c) 1986-2009 Infox Tecnologia da Informação Ltda.
 
  Este programa é software livre; você pode redistribuí-lo e/ou modificá-lo 
  sob os termos da GNU GENERAL PUBLIC LICENSE (GPL) conforme publicada pela 
  Free Software Foundation; versão 2 da Licença.
  Este programa é distribuído na expectativa de que seja útil, porém, SEM 
  NENHUMA GARANTIA; nem mesmo a garantia implícita de COMERCIABILIDADE OU 
  ADEQUAÇÃO A UMA FINALIDADE ESPECÍFICA.
  
  Consulte a GNU GPL para mais detalhes.
  Você deve ter recebido uma cópia da GNU GPL junto com este programa; se não, 
  veja em http://www.gnu.org/licenses/  
--> 

<ui:composition xmlns="http://www.w3.org/1999/xhtml"
				xmlns:s="http://jboss.com/products/seam/taglib"
				xmlns:ui="http://java.sun.com/jsf/facelets"
				xmlns:f="http://java.sun.com/jsf/core"
				xmlns:h="http://java.sun.com/jsf/html"
				xmlns:wi="http://www.itx.com.br/jsf"
				xmlns:a="http://richfaces.org/a4j"
				xmlns:rich="http://richfaces.org/rich">

	<ui:param name="useCheckBox" value="#{empty useCheckBox ? (empty props.useCheckBox ? false : props.useCheckBox) : useCheckBox}" />
	<ui:param name="checkBoxRendered" value="#{empty checkBoxRendered ? (empty props.checkBoxRendered ? (useCheckBox and !home.managed) : props.checkBoxRendered) : checkBoxRendered}" />
	<ui:param name="reRenderDefault" value="#{id}HiddenId, #{id}ClearDiv" />
	<ui:param name="reRender" value="#{empty reRender ? reRenderDefault : reRenderDefault.concat((',').concat(reRender)) }" />
	
	<rich:tree id="#{id}Tree" 
		switchType="#{wi:get(switchType, 'ajax')}" 
		data="#{item}"
		bypassUpdates="true"
		immediate="true" 
		nodeFace="#{item.type}"
		reRender="#{reRender}"  
		ajaxSubmitSelection="true"
		nodeSelectListener="#{tree.selectListener}" 
		ajaxSingle="true"
		status=":status" 
		showConnectingLines="false">
		<rich:recursiveTreeNodesAdaptor 
			roots="#{tree.roots}" 
			var="item"
			nodes="#{item.nodes}">
		</rich:recursiveTreeNodesAdaptor>

		<ui:param name="isPai" value="#{item.entity == home.instance}" />
		<ui:param name="ativo" value="#{item.entity.ativo}" />
		<ui:param name="cantSelect" value="#{not item.canSelect()}" />
		<rich:treeNode
			onselected="#{onselectFolder};"
			onclick="#{onclick}"
			highlightedClass="#{folderSelectable ? '' : 'folderHighlighted'}"
			selectedClass="#{folderSelectable ? '' : 'folderSelected'}"
			type="folder" 
			reRender="#{id}HiddenId,#{id}Label" 
			ajaxSingle="true"
			bypassUpdates="true" 
			icon="#{empty icon ? tree.iconFolder : icon}"
			iconLeaf="#{empty iconLeaf ? tree.iconLeaf : iconLeaf}" 
			eventsQueue="select">
			<ui:param name="decoration"	value="#{ativo ? 'none' : 'line-through'}" />
			<ui:param name="cor" value="#{ativo and not cantSelect  ? '' : 'red'}" />
			<div style="width: 100%; text-decoration:#{decoration}; color: #{cor}">
				<h:selectBooleanCheckbox id="#{id}CheckBoxTree"
										 value="#{item.selected}" 
										 rendered="#{checkBoxRendered}" >
					<a:support	action="#{tree.setSelectedNode(item)}" 
								status=":status" 
								ajaxSingle="true" 
								event="onclick"
								reRender="#{id}CheckBoxTree, #{id}Label" />
				</h:selectBooleanCheckbox>
				&#160;
				<h:outputText value="#{item.entity}" />	
			</div>
		</rich:treeNode>

		<rich:treeNode 
			type="leaf" 
			nodeClass="" 
			icon="#{tree.iconLeaf}"
			bypassUpdates="true" 
			ajaxSingle="true"
			reRender="#{id}HiddenId,#{id}Label" 
			iconLeaf="#{tree.iconLeaf}"
			onselected="#{onselected}"
			eventsQueue="select">
			<ui:param name="decoration"	value="#{item.entity.ativo ? 'none' : 'line-through'}" />
			<ui:param name="cor" value="#{item.entity.ativo  ? '' : 'red'}" />
			<div style="width: 100%; text-decoration:#{decoration}; color: #{cor}">
				<h:outputText value="#{item.entity}" />
			</div>
		</rich:treeNode>
	</rich:tree>

</ui:composition>